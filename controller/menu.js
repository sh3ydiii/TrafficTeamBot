import fs from 'fs'
import {userLoad} from '../controller/user.js'


const menu = (bot, chatId) => {

    const menuMsg = `
    ü•∑  –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>WINZER Team Bot!</b>
    `

    const keyMenu = {
        reply_markup: {
            inline_keyboard: [
                [
                    {text: 'üíª –ü—Ä–æ—Ñ–∏–ª—å', callback_data: 'profile'},
                    {text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'stats'}
                ],
                [
                    {text: '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', callback_data: 'information'},
                    {text: '‚öôÔ∏è –ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞', callback_data: 'system'}
                ]
            ]
        }
    }

    bot.sendPhoto(chatId, './image/main.jpg', {
        caption: menuMsg,
        ...keyMenu,
        parse_mode: 'HTML'
    })
}

const referals = (bot,chatId) => {
    const users = userLoad(bot,chatId)

    const refMsg = `
    üë•<b> ‚Äí –†–µ—Ñ–µ—Ä–∞–ª–∫–∞</b>

<b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞:</b> <code>${users[chatId].link}</code>

<b>–í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: </b> <code>${users[chatId].refs.length}</code>

<b>–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å —Ä–µ—Ñ —Å—Å—ã–ª–∫–∏:</b> <code>${users[chatId].balanceAll}$</code>
    `

    const refKey = {
        reply_markup: {
            inline_keyboard: [
                [{text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data: 'back_to_menu'}]
            ]
        }
    }
    bot.sendPhoto(chatId, './image/main.jpg', {
        caption: refMsg,
        ...refKey,
        parse_mode: 'HTML'
    })
}
const profile = (bot, chatId) => {
    const users = userLoad(bot,chatId)
    
    const profileMessage = `
    ü•∑ <b>WINZER TEAM</b>

üìä ‚Äí <b>–ü—Ä–æ—Ñ–∏–ª—å:</b> 
 ‚ä¢üÜî <b>–ú–æ–π Id:</b> ${chatId}
 ‚ä¢üí∞ <b>–ë–∞–ª–∞–Ω—Å:</b> ${users[chatId].balance}$
 ‚ä¢üë• <b>–†–µ—Ñ–µ—Ä–∞–ª—ã:</b> ${users[chatId].refs.length}
 ‚ä¢üïî <b>–í—Ä–µ–º—è –≤ —Ç–∏–º–µ:</b> –°–∫–æ—Ä–æ...
    `

    const keyProfile = {
        reply_markup: {
            inline_keyboard: [
                [
                    {text: 'üí∞ –í—ã–ø–ª–∞—Ç–∞', callback_data: `finance`},
                    {text: 'üë• –†–µ—Ñ–µ—Ä–∞–ª—ã', callback_data: 'referals'}
                ],
                [{text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back_to_menu'}]
                
            ]
        }
    }

    bot.sendPhoto(chatId, './image/main.jpg', {
        caption: profileMessage,
        ...keyProfile,
        parse_mode: 'HTML'
    })
}

const stats = (bot,chatId) => {
    const user = JSON.parse(fs.readFileSync('./db/users.json'))

    const userCount = Object.keys(user).length;
    const totalBalanceAll = Object.values(user)
      .reduce((total, user) => total + user.balanceAll, 0);

    const statsMsg = `
    ü•∑ <b>WINZER TEAM</b>

üìä ‚Äí <b>–ü—Ä–æ—Ñ–∏–ª—å:</b> 
‚ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <code>${userCount}</code>
‚ä¢ –í—Å–µ–≥–æ –≤—ã–ø–ª–∞—á–µ–Ω–Ω–æ: <code>${totalBalanceAll}$</code>
`
    const statKey = {
        reply_markup: {
            inline_keyboard: [
                [{text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back_to_menu'}]
            ]
        }
    }

    bot.sendPhoto(chatId, './image/main.jpg', {
        caption: statsMsg,
        ...statKey,
        parse_mode: 'HTML'
    })
}

const information = (bot, chatId) => {
    const infoMsg = `
    üìå<b>–ù–∞–ø–æ–º–∏–Ω–∞—é –∫–∞–∫–æ–π —Ç—Ä–∞—Ñ–∏–∫ –Ω–µ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è:</b>

- –ë–æ—Ç—ã, –Ω–∞–∫—Ä—É—Ç, –¥–µ—Ç–∏, –∞—Ä–∞–±—ã, –Ω–æ–≤–æ—Ä–µ–≥–∏, –¥–µ–≤–æ—á–∫–∏ (–Ω–µ —Ü–∞), –∞–Ω–∏–º–µ—à–Ω–∏–∫–∏.

<b>–û—Ç –Ω–∞—Å:</b>
<i>
1) –ë–æ–ª—å—à–æ–µ –∫–æ–º—å—é–Ω–∏—Ç–∏

2) O,6$ –∑–∞ 1 –ø–¥–ø

3) –ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç

4) –û–±—É—á–µ–Ω–∏–µ –Ω–æ–≤–∏—á–∫–æ–≤

5) –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7
</i>
<b>–ë–æ—Ç–∞ —Å–¥–µ–ª–∞–ª - @sh3ydiiicoder, –Ω–∞—Å—á—ë—Ç –ø—Ä–æ–±–ª–µ–º –ø–∏—Å–∞—Ç—å –µ–º—É.</b>
    `
    const infoKey = {
        reply_markup: {
            inline_keyboard: [
                [{text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back_to_menu'}]
            ]
        }
    }

    bot.sendPhoto(chatId, './image/main.jpg', {
        caption: infoMsg,
        ...infoKey,
        parse_mode: 'HTML'
    })
}

const system = (bot, chatId) => {
    const sysMsg = `
    ‚öôÔ∏è <b>–ü–æ—Å–º–æ—Ç—Ä–∏ –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã –Ω–∞—à–µ–π —Ç–∏–º—ã!</b>

<b>–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥—ë—Ç–µ –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π:</b>
<blockquote>üí¨–ß–∞—Ç ‚Äî –æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 
üíµ –í—ã–ø–ª–∞—Ç—ã ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–ø–ª–∞—Ç–∞—Ö 
üìã –ú–∞–Ω—É–∞–ª—ã ‚Äî –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ 
üì∞ –ù–æ–≤–æ—Å—Ç–∏‚Äî –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
</blockquote>
    `
    const sysKey = {
        reply_markup: {
            inline_keyboard: [
                [
                    {text: '–ß–∞—Ç', url: 'https://t.me/sh3ydii'},
                    {text: '–í—ã–ø–ª–∞—Ç—ã', url: 'https://t.me/sh3ydii'}
                ],
                [
                    {text: '–ú–∞–Ω—É–∞–ª—ã', url: 'https://t.me/sh3ydii'},
                    {text: '–ù–æ–≤–æ—Å—Ç–∏', url: 'https://t.me/sh3ydii'}
                ],
                [{text: '–ù–∞–∑–∞–¥', callback_data: 'back_to_menu'}]
            ]
        }
    }

    bot.sendPhoto(chatId, './image/main.jpg', {
        caption: sysMsg,
        ...sysKey,
        parse_mode: 'HTML'
    })
}
export {profile, menu, referals, stats, information, system}